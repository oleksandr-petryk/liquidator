services:
  postgres:
    image: postgres:13.21-alpine3.20
    hostname: postgres
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_MULTIPLE_DATABASES: '"db-dev","db-test"'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ../scripts/init-multi-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multi-postgres-databases.sh
    networks:
      - default_network

  redis:
    image: redis:8.0.0
    hostname: redis
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - ./data/redis:/data
    networks:
      - default_network

  redis-insight:
    image: redis/redisinsight:2.68
    container_name: redis-insight
    ports:
      - '5540:5540'
    depends_on:
      - redis
    volumes:
      - ./data/redis-insight:/data
    networks:
      - default_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '32181:32181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - default_network

  kafka:
    image: confluentinc/cp-kafka:latest-ubi8
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://localhost:29092,PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
    depends_on:
      - zookeeper
    networks:
      - default_network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - '8182:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - default_network

  inbucket:
    image: inbucket/inbucket:latest
    container_name: inbucket
    ports:
      - 9000:9000
      - 2500:2500
    environment:
      - INBUCKET_HTTP_ADDR=:9000
      - INBUCKET_SMTP_ADDR=:2500
      - INBUCKET_STORAGE_TYPE=memory
      - INBUCKET_LOGLEVEL=info
    networks:
      - default_network
      
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - '4566:4566'
      - '4571:4571'
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/localstack-data
    volumes:
      - ./localstack/init:/etc/localstack/init/ready.d
      - ./data/localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default_network:
    name: default_network
