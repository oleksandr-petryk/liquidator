name: CI

env:
  NODE_VERSION: '22'

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'test/**'
      - 'scripts/**'
      - 'jest/**'
      - 'drizzle/**'
      - 'docker/**'
      - '.github/**'
      - '.env.ci.example'
      - '.drizzle.config.ts'
      - 'eslint.config.mjs'
      - 'nest-cli.json'
      - 'package.json'
      - 'tsconfig.build.json'
      - 'tsconfig.json'
      - 'yarn.lock'
      - '!docs/**'

  pull_request:
    paths:
      - 'src/**'
      - 'test/**'
      - 'scripts/**'
      - 'jest/**'
      - 'drizzle/**'
      - 'docker/**'
      - '.github/**'
      - '.env.ci.example'
      - '.drizzle.config.ts'
      - 'eslint.config.mjs'
      - 'nest-cli.json'
      - 'package.json'
      - 'tsconfig.build.json'
      - 'tsconfig.json'
      - 'yarn.lock'
      - '!docs/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run linter
        run: yarn lint
      - name: Run Prettier
        run: yarn format
      - name: Test build
        run: yarn build

  test-unit:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Start docker
        run: yarn docker:ci:start
      - name: Install packages
        run: yarn install --frozen-lockfile
      - name: Prepare .env file
        run: cp .env.ci.example .env
      - name: Run unit tests
        run: yarn test:unit

  test-e2e:
    runs-on: ubuntu-latest
    name: E2E tests
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: db-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Start Docker
        run: yarn docker:ci:start
      - name: Install packages
        run: yarn install --frozen-lockfile
      - name: Prepare .env file
        run: cp .env.ci.example .env
      - name: Apply migrations
        run: yarn db:migrate
      - name: Run Nest.js server
        run: yarn build && yarn start:prod &
      - name: Wait for services to be ready
        run: ./scripts/ci/wait-for-docker-compose.sh
      - name: Run E2E tests
        run: yarn test:e2e

  test-load:
    runs-on: ubuntu-latest
    name: Load test
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: db-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Start docker
        run: yarn docker:ci:start
      - name: Install packages
        run: yarn install --frozen-lockfile
      - name: Prepare .env file
        run: ./scripts/ci/prepare-ci-env-file.sh
      - name: Run Nest.js server
        run: yarn build && yarn start:prod &
      - name: Wait for services to be ready
        run: ./scripts/ci/wait-for-docker-compose.sh
      - name: Load tests for health endpoint
        run: npx artillery run ./test/performance/health.yml
